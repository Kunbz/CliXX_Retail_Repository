// used this to push the docker image for dev account using this endpoint: in the wp-config file : wordpressdbclixxkam.cbkn2kkw3gsk.us-east-1.rds.amazonaws.com, this endpoint is in dev

pipeline {
    agent any
    environment {
        VERSION = "1.0.${BUILD_NUMBER}"
        PATH = "${PATH}:${getSonarPath()}:${getDockerPath()}"
        // RUNNER = "KUNBI"
         RUNNER = "${RUNNER}"
        
    }
    stages {
          stage ('Build Docker Image') {
          steps {
            slackSend (color: '#FFFF00', message: "BUILD DOCKER IMAGE -${env.RUNNER} : Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
            // script{
            //  dockerHome= tool 'docker-inst'
            // }
            //  sh "${dockerHome}/bin/docker build . -t clixx-image:$VERSION "
            sh "docker build . -t clixx-image:$VERSION "
          }
        }
        stage ('Log Into ECR and push the newly created Docker') {
          steps {
            slackSend (color: '#FFFF00', message: "LOGGING INTO ECR AND PUSHING THE NEWLY CREATED DOCKER -${env.RUNNER} : Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
             script {
                def userInput = input(id: 'confirm', message: 'Push Image To ECR?', parameters: [ [$class: 'BooleanParameterDefinition', defaultValue: false, description: 'Push to ECR?', name: 'confirm'] ])
             }
              withCredentials([
                     string(credentialsId: 'ecr_url', variable: 'ecr_url')
                     ])
                  {
              sh '''
                ECR_URL="${ecr_url}"
                aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $ECR_URL
                docker tag clixx-image:$VERSION $ECR_URL:clixx-image-$VERSION
                docker tag clixx-image:$VERSION $ECR_URL:latest
                docker push $ECR_URL:clixx-image-$VERSION
                docker push $ECR_URL:latest
              '''
              }
          }
        }
    }
}
def getSonarPath(){
        def SonarHome= tool name: 'sonarqube', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
        return SonarHome
    }
def getDockerPath(){
        def DockerHome= tool name: 'docker-inst', type: 'dockerTool'
        return DockerHome
    }